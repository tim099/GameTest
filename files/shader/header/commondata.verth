#include <files/shader/header/option>
layout(location = 0)in vec3 vertexPosition;
layout(location = 1)in vec2 vertexUV;
layout(location = 2)in vec3 vertexNormal;

layout(location = 3)in float UVlayer;//active at option LayerTexture
//layout(location = 4)in float test;//active at option LayerTexture
uniform mat4 VP;
uniform mat4 M; 
uniform vec4 clipping_plane;

out VertexDataOut {
	vec2 UV;
	vec3 Normal;
	vec3 vertexPosition;
	vec4 position;
	vec4 MVP_pos;
	float UVlayer;
}vertout;
void clipping(){
	if((shaderData&Clipping)==0)return;
	if(dot(clipping_plane,vertout.position)<0){//do clipping
		vertout.MVP_pos.z=vertout.MVP_pos.w+100.0;
	}
}
void common_vert(){
	vertout.vertexPosition=vertexPosition;
	vertout.position=M*vec4(vertout.vertexPosition,1);//real world position
	vertout.MVP_pos=VP*vertout.position; 
 	vertout.Normal=(M*vec4(vertexNormal,0)).xyz;
    vertout.UV=vertexUV;    
    if((shaderData&LayerTexture)!=0){
    	vertout.UVlayer=UVlayer;
    }
    clipping();
    gl_Position=vertout.MVP_pos;//;VP*M*vec4(vertexPosition,1)  
    //gl_ClipDistance[0]=dot(vec4(0,-1,0,40),vertout.position);
}
